import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl
  
  // Debug: Log all cookies ƒë·ªÉ xem backend set cookie g√¨
  console.log('üîç Middleware Debug:', {
    pathname,
    cookies: request.cookies.getAll().map(c => ({ name: c.name, value: c.value.substring(0, 50) + '...' }))
  })
  
  // Redirect trang ch·ªß v·ªÅ login n·∫øu ch∆∞a c√≥ session
  if (pathname === '/') {
    console.log('üè† Home page accessed - redirecting to login')
    return NextResponse.redirect(new URL('/login', request.url))
  }
  
  // DISABLE MIDDLEWARE AUTHENTICATION - ƒê·ªÉ AuthProvider x·ª≠ l√Ω
  // V√¨ middleware kh√¥ng th·ªÉ truy c·∫≠p localStorage
  console.log('üîí Protected route accessed:', pathname)
  console.log('‚úÖ Allowing access - AuthProvider will handle authentication')
  
  return NextResponse.next()
}

export const config = {
  matcher: [
    '/',
    '/(protected)/:path*',
    '/(auth)/:path*',
  ],
}
